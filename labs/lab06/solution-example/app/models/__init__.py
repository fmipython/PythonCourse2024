"""
Т.нар. "модел" е общоприет термин в много architectural & design patterns,
който обозначава просто клас (тип проста структура от данни),
който репрезентира вярно и пълно цялата информация, с която борави приложението.

В нашия случай, това е клас `Note`, който представя една бележка в нашето приложение.

Причини:

1. По-лесна и необъркваща е работата с такива класове.
2. По-лесно е да се добавят нови полета и функционалности към класа, отколкото към речник.
3. Моделите на приложението не е хубаво да зависят от конкретните имлоементационни детайли, 
    напр. на базата данни,
          на формата на файлове (JSON, CSV, XML, YAML, ...),
          на външни API-та и т.н.
    Най-удачно е, ако ползваме API, което предоставя обекти с малко по-различна структура от нашата,
    то да създадем отделни модели, който са валидни само за API-то, 
    и да конвертираме между тях и нашите модели.

Нашите модели (тези, които репрезентират core данните и логиката ни), 
се наричат **домейн модели**. Можем да имаме Database модели, Network модели и т.н.
"""
